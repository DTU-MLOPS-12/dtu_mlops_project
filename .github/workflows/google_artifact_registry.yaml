name: Build docker images and push to Google Artifact Registry

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tags:
        description: "Test scenario tags"

env:
  LOCATION: europe
  REPO: default-container-repository
  TAG: latest # ${{ github.event.release.tag_name }}
  PROJECT_ID: dtu-mlops-447711
  GAR_LOCATION: europe-docker.pkg.dev/dtu-mlops-447711/default-container-repository/
  BACKEND_URL: https://fastapi-app-ypqrr5d7oa-ez.a.run.app/
  GCP_PROJECT_ID: 840739092468

jobs:
  list-dockerfiles:
    runs-on: ubuntu-latest
    outputs:
      dockerfiles: ${{ steps.set-output.outputs.dockerfiles }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Find Dockerfiles
        id: set-output
        run: |
          files=$(find dockerfiles -name "*.dockerfile" -print0 | xargs -0 printf "%s,")
          echo "dockerfiles=${files%,}" >> $GITHUB_OUTPUT

  build-and-push:
    needs: list-dockerfiles
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dockerfile: ${{ fromJson(needs.list-dockerfiles.outputs.dockerfiles) }}
    steps:
      - uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GOOGLE_CREDENTIALS }}"

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Build Docker image
        run: |
          image_name=$(basename ${{ matrix.dockerfile }} .dockerfile)
          docker build --secret id=GCP_SA_KEY_DVC -f ${{ matrix.dockerfile }} . -t ${{ env.GAR_LOCATION }}$image_name:${{ env.TAG }}

      - name: Push Docker image
        run: |
          image_name=$(basename ${{ matrix.dockerfile }} .dockerfile)
          docker push ${{ env.GAR_LOCATION }}$image_name:${{ env.TAG }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy FastAPI App to Cloud Run
        run: |
          gcloud run deploy fastapi-app --image ${{ env.GAR_LOCATION }}api:${{ env.TAG }} --platform managed --region europe-west4 --allow-unauthenticated --set-env-vars GCP_PROJECT_ID="${{ env.GCP_PROJECT_ID }}"

      - name: Deploy Streamlit App to Cloud Run
        run: |
          gcloud run deploy streamlit-app --image ${{ env.GAR_LOCATION }}frontend:${{ env.TAG }} --platform managed --region europe-west4 --allow-unauthenticated --set-env-vars BACKEND="${{ env.BACKEND_URL }}"
