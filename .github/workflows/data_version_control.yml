name: 1. DVC and Training Pipeline

on:
  pull_request:
    branches:
      - main
    paths:
      - '**/*.dvc'
      - '.dvc/**'
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tags:
        description: "Scenario tags"

env:
  LOCATION: europe-west4
  LOCATION_SHORT: europe
  REPO: default-container-repository
  TAG: latest 
  PROJECT_ID: dtu-mlops-447711
  GAR_LOCATION: europe-docker.pkg.dev/dtu-mlops-447711/default-container-repository/
  BACKEND_URL: https://fastapi-app-ypqrr5d7oa-ez.a.run.app/
  GCP_PROJECT_ID: 840739092468

jobs:
  build-images:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Authenticate to Google Cloud
        id: auth
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GOOGLE_CREDENTIALS }}"
          
      - name: Set up GCP_SA_KEY_DVC
        env:
          GCP_SA_KEY_DVC: ${{ secrets.GCP_SA_KEY_DVC }}
        run: echo "Setting up GCP_SA_KEY_DVC"

      - name: Setup GCP SDK
        uses: "google-github-actions/setup-gcloud@v2"

      - name: Use gcloud CLI
        run: gcloud info

      - name: Docker authentication
        run: |
          gcloud auth configure-docker ${{ env.LOCATION_SHORT }}-docker.pkg.dev --quiet

      - name: Build images
        env:
          GCP_SA_KEY_DVC: ${{ secrets.GCP_SA_KEY_DVC }}
          WANDB_API_KEY: ${{ secrets.WANDB_API_KEY_GRP_12 }}
        run: |
          for dockerfile in dockerfiles/*train.dockerfile; do
            image_name=$(basename $dockerfile .dockerfile)
            docker build --build-arg WANDB_API_KEY="${{ secrets.WANDB_API_KEY_GRP_12 }}" --secret id=GCP_SA_KEY_DVC -f $dockerfile . -t ${{ env.GAR_LOCATION }}$image_name:${{ env.TAG }} &
          done
          wait

      - name: Upload to Artifact Registry
        run: |
          for dockerfile in dockerfiles/*train.dockerfile; do
            image_name=$(basename $dockerfile .dockerfile)
            docker push ${{ env.GAR_LOCATION }}$image_name:${{ env.TAG }} &
          done
          wait

  start-vertex-job:
    runs-on: ubuntu-latest
    needs: build-images
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Authenticate to Google Cloud
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GOOGLE_CREDENTIALS }}"

      - name: Set up Google Cloud SDK
        uses: "google-github-actions/setup-gcloud@v2"
        with:
          project_id: ${{ env.PROJECT_ID }}
           
      - name: Set PR Number
        id: set_pr_number
        run: echo "export PR_NUMBER=${{ github.event.pull_request.number || github.event.issue.number }}" >> $GITHUB_ENV
      - name: Echo current date
        run: echo $PR_NUMBER

      - name: Set PR Number
        id: set_pr_number2
        run: echo "PR_NUMBER2=${{ github.event.pull_request.number || github.event.issue.number }}" >> $GITHUB_ENV
      - name: Echo current date
        run: echo $PR_NUMBER2
        
      - name: Set current date as env variable
        run: echo "NOW=$(date +'%Y-%m-%dT%H%M%S')" >> $GITHUB_ENV
      - name: Echo current date
        run: echo $NOW 

      - name: Start Vertex AI Training Job
        run: |
          gcloud ai custom-jobs create \
            --region ${{ env.LOCATION }} \
            --display-name="PR-${PR_NUMBER}${PR_NUMBER2}${NOW}" \
            --config=configs/vertex_ai_config_gpu.yaml \
            --command 'python' \
            --args='src/dtu_mlops_project/train.py,--config,configs/mobilenetv4_conv_small_fine_tuning.yaml,--epochs,30,--wandb-project,mlops_project'
        env:
          WANDB_API_KEY: "${{ secrets.WANDB_API_KEY }}"
