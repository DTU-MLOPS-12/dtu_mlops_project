name: 2. Run a locust load test on the API testing instance (Pre-Production)

on:
  workflow_dispatch:
    inputs:
      tags:
        description: "Test scenario tags"

env:
  TAG: latest # ${{ github.event.release.tag_name }}
  GAR_LOCATION: europe-docker.pkg.dev/dtu-mlops-447711/default-container-repository/
  GCP_PROJECT_ID: 840739092468

jobs:
  testrunner:
    name: "Run a locust load test suite"
    runs-on: "ubuntu-latest"
    defaults:
      run:
        shell: bash -el {0}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
          cache: 'pip'

      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          activate-environment: dtu_mlops_project
          python-version: 3.12
          channels: conda-forge

      - name: Authenticate to Google Cloud
        id: auth
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GOOGLE_CREDENTIALS }}"

      - name: Set up GCP_SA_KEY_DVC
        env:
          GCP_SA_KEY_DVC: ${{ secrets.GCP_SA_KEY_DVC }}
        run: echo "Setting up GCP_SA_KEY_DVC"

      - name: Setup GCP SDK
        uses: "google-github-actions/setup-gcloud@v2"

      - name: Deploy API testing instance
        run: |
          gcloud run deploy fastapi-app-test --image ${{ env.GAR_LOCATION }}api:${{ env.TAG }} \
            --platform managed --region europe-west4 --allow-unauthenticated --set-env-vars GCP_PROJECT_ID="${{ env.GCP_PROJECT_ID }}" &
          wait

      - name: Install dependencies
        run: |
          pip install -r deps/requirements_loadtest.txt

      - name: Extract deployed model URL Run the load tests
        run: |
          DEPLOYED_MODEL_URL=$(gcloud run services describe fastapi-app-test \
          --region=europe-west4 \
          --format='value(status.url)')

          echo "The URL is: $DEPLOYED_MODEL_URL"
          locust -f tests/performancetests/locustfile.py \
            --headless -u 100 -r 10 --run-time 1m --host=$DEPLOYED_MODEL_URL --csv=results

      - name: Upload locust test results to WandB
        run: |
          wandb login {{ secrets.WANDB_API_KEY_GRP_12 }}
          python src/dtu_mlops_project/upload_loadtest_results.py --result-stats results_stats.csv \
            --result-failures results_failures.csv --result-exceptions results_exceptions.csv \
            --result-stats-history result_stats_history.csv
